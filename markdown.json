{
	// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"intensive reading":{
		"prefix":[
			"intensive reading",
			"special papers"
		],
		"body":[
			"# Topic $1",
			"$CURRENT_MONTH_NAME_SHORT $CURRENT_DATE $CURRENT_YEAR $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND  ",
			"> **Title:$2:**  ",
			"**Jour(Conf):$3**  ",
			"**DOI:$4**  ",
			"**Keys:$5**  ",
			"## Summary",
			"### Problem",
			"",
			"### Motivation",
			"",
			"## Highlight",
			"",
			"",
			"## Notes",
			"- Concept 1",
			"- Concept 2",
			"- Experiment",
			"",
			"## What's For me",
			"",
			"## Question",
			"- Q1",
			"- Q2",
			"",
			"## Language",
			"> ",
			"",
			"## Reference",
			"[1]. "
		],
		"description": "intensive read paper notes"
	},
	"extensive reading": {
		"prefix": [
			"extensive reading",
			"other papers"
		],
		"body": [
			"# Topic $1",
			"$CURRENT_MONTH_NAME_SHORT $CURRENT_DATE $CURRENT_YEAR $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND  ",
			"> **Title:$2:**  ",
			"**Jour(Conf):$3**  ",
			"**DOI:$4**  ",
			"",
			"## Highlight",
			"**Problem:**",
			"",
			"## Notes",
			"- Concept 1",
			"- Concept 2",
			"- Experiment",
			"",
			"## What's For me",
			"",
			"## Question",
			"- Q1",
			"- Q2"
		],
		"description": "extensive read paper notes"
	},
	"idea pills":{
		"prefix": "idea pills",
		"body": [
			"# Idea pills $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"$CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND  ",
			" Type:$2  ",
			"## Resource",
			"",
			"## Idea",
			"",
			"## Further",
			""
		],
		"description": "record passing idea"
	},
	"kpt daily":{
		"prefix": ["kpt daily","work diary"],
		"body": [
			"# KPT $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"## Keep",
			"1. ",
			"2. ",
			"",
			"## Problem",
			"1. ",
			"2. ",
			"",
			"## Try",
			"1. ",
			"2. "
		],
		"description": "keep and try (daily)"
	},
	"word list":{
		"prefix": "word list",
		"body": [
			"# Word $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"**Topic:**",
			"| Word | Meaning | Usage | Sentence |",
			"|  $1  |   $2    |  $3   |    $4    |",
			"## Repeat",
			""
		],
		"description": "10 word one day"
	},
	"debug notes":{
		"prefix": "debug notes",
		"body": [
			"# Debug $1",
			"**Project Path:**",
			"## $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"### Traceback",
			"",
			"### Code",
			"",
			"### Try",
			"",
			"### Solution",
			"",
			"### Ref",
			"",
			""
		]
	},
	"book notes":{
		"prefix": "book notes",
		"body": [
			"# Title $1",
			"$CURRENT_MONTH_NAME_SHORT $CURRENT_DATE $CURRENT_YEAR",
			"**Stars:**",
			"**Author:**",
			"## Highlight",
			"> ",
			"",
			"> ",
			"## Notes",
			"",
			"",
			"## Summary",
			""
		]
	},
	"readme":{
		"prefix": ["doc","readme"],
		"body": [
				"DEMO",
				"===========================",
				"#### Describution",
				"",
				"Eg. This repository contains PyTorch implementations of deep reinforcement learning algorithms and environments.
				Eg. keras-rl implements some state-of-the art deep reinforcement learning algorithms in Python and seamlessly integrates with the deep learning library Keras.
				" ,
				"",
				"#### Dependency",
				" node v0.10.28+",
				" redIs ",
				"",
				"#### Installation",
				"1. Add system path",
				"	export $PORTAL_VERSION="production" // production, test, dev",
				"",
				"2. npm install //安装node运行环境",
				"",
				"",
				"#### Usage/Example",
				"",
				"",

				"#### File Tree",
				"├── Readme.md // help",  
				"├── app // 应用",  
				"├── config // 配置",  
				"│   ├── default.json",  
				"│   ├── dev.json // 开发环境",  
				"│   ├── experiment.json // 实验",   
				"│   └── test.json // 测试环境",  
				"├── data",   
				"├── static // web静态资源加载",  
				"│   └── initjson",  
				"│       └── config.js // 提供给前端的配置",  
				"├── test", 
				"├── test-service.js",  
				"└── tools",
				"",
				"#### V1.0.0 Update log",
				"1. New Func    aaaaaaaaa",
				"2. New Func     bbbbbbbbb",
				"3. New Func     ccccccccc",
				"",
				"#### Reference",
				"#### Contributing",
				"#### Copyright/Licence"
		],
		"description": "generate readme documention"
	}
}

